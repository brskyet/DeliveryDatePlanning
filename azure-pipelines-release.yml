pool: 'Docker_Registry'

trigger:
  - master

steps:
  - task: UseDotNet@2
    displayName: 'Install .NET 6 SDK'
    inputs:
      packageType: 'sdk'
      version: '6.0.x'
      performMultiLevelLookup: true

  - task: DotNetCoreCLI@2
    displayName: 'dotnet restore'
    inputs:
      command: restore
      projects: '**/*.csproj'
      feedsToUse: config
      nugetConfigPath: 'nuget.config'

  - task: DotNetCoreCLI@2
    displayName: 'Run unit tests'
    inputs:
      command: test
      projects: '**/*UnitTest/*.csproj'
      arguments: '--configuration $(buildConfiguration)'
  
  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testRunTitle: DeliveryDatePlanning Unit Tests
      testResultsFiles: '*.trx'
      searchFolder: '$(Agent.TempDirectory)'

  - task: DockerCompose@0
    displayName: 'Build services'
    env:
      ConsulToken: $(ConsulToken)
    inputs:
      containerregistrytype: 'Container Registry'
      dockerRegistryEndpoint: Pandora
      dockerComposeFile: 'docker-compose.yml'
      action: 'Build services'
      additionalImageTags: '$(Build.BuildNumber)'
      includeLatestTag: true
      dockerComposeFileArgs: 'ConsulToken=$(ConsulToken)'

  - task: DockerCompose@0
    displayName: 'Push services'
    env:
      ConsulToken: $(ConsulToken)
    inputs:
      containerregistrytype: 'Container Registry'
      dockerRegistryEndpoint: Pandora
      dockerComposeFile: 'docker-compose.yml'
      action: 'Push services'
      additionalImageTags: '$(Build.BuildNumber)'
      includeLatestTag: true
      dockerComposeFileArgs: 'ConsulToken=$(ConsulToken)'

  - task: CopyPublishBuildArtifacts@1
    displayName: 'Copy Publish Artifact for Docker'
    inputs:
      Contents: '*.yml'
      ArtifactName: Ansible
      ArtifactType: Container